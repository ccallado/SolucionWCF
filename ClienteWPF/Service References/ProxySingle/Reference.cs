//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.17929
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteWPF.ProxySingle {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxySingle.IServicioSingle")]
    public interface IServicioSingle {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioGeneral/IncrementaContador", ReplyAction="http://tempuri.org/IServicioGeneral/IncrementaContadorResponse")]
        int IncrementaContador(int segundosParada);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioSingle/ReseteaContador")]
        void ReseteaContador();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioSingleChannel : ClienteWPF.ProxySingle.IServicioSingle, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioSingleClient : System.ServiceModel.ClientBase<ClienteWPF.ProxySingle.IServicioSingle>, ClienteWPF.ProxySingle.IServicioSingle {
        
        public ServicioSingleClient() {
        }
        
        public ServicioSingleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioSingleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioSingleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioSingleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int IncrementaContador(int segundosParada) {
            return base.Channel.IncrementaContador(segundosParada);
        }
        
        public void ReseteaContador() {
            base.Channel.ReseteaContador();
        }
    }
}
